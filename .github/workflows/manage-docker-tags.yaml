name: Delete Old Docker Tags

on:
  workflow_dispatch:

jobs:
  delete-tags:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 2: Fetch Docker Image Tags from the repository
    - name: Fetch Docker Image Tags
      id: fetch_tags
      run: |
        IMAGE="${{ secrets.DOCKER_REPO }}"
        TAGS_URL="https://hub.docker.com/v2/repositories/${IMAGE}/tags/"
        echo "Fetching tags for $IMAGE..."
        TAGS=()
        NEXT_PAGE=$TAGS_URL
        
        while [ "$NEXT_PAGE" != "null" ]; do
          RESPONSE=$(curl -s $NEXT_PAGE)
          TAGS+=( $(echo "$RESPONSE" | grep -o '"name":"[^"]*' | sed 's/"name":"//') )
          NEXT_PAGE=$(echo "$RESPONSE" | grep -o '"next":"[^"]*' | sed 's/"next":"//' | sed 's/\\"//g')
          NEXT_PAGE=${NEXT_PAGE:-null}  # Handle null next page
        done
        echo "Found ${#TAGS[@]} tags"
        echo "tags=${TAGS[*]}" >> $GITHUB_ENV
        echo "tag_count=${#TAGS[@]}" >> $GITHUB_ENV

    # Step 3: Delete Old Tags if Count Exceeds 10
    - name: Delete Old Tags if Count Exceeds 10
      if: env.tag_count > 10
      run: |
        IMAGE="${{ secrets.DOCKER_REPO }}"
        TAGS=(${{ env.tags }})
        KEEP=10
        echo "Deleting older tags..."

        # Get the timestamp-based tags and sort them by creation date
        TIMESTAMP_TAGS=()
        for TAG in "${TAGS[@]}"; do
          # Match timestamp-based tags like yyyyMMddHHmmss
          if [[ "$TAG" =~ ^[0-9]{8}[0-9]{6}$ ]]; then
            TIMESTAMP_TAGS+=("$TAG")
          fi
        done

        # Sort timestamp-based tags by date (oldest first)
        if [ ${#TIMESTAMP_TAGS[@]} -gt $KEEP ]; then
          for ((i=0; i<${#TIMESTAMP_TAGS[@]} - KEEP; i++)); do
            TAG=${TIMESTAMP_TAGS[$i]}
            echo "Deleting tag: $TAG"
            curl -X DELETE -u "${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }}" \
            "https://hub.docker.com/v2/repositories/${IMAGE}/tags/${TAG}/"
          done
        else
          echo "No tags to delete. Keeping the most recent $KEEP tags."
        fi
        echo "Old tags deleted successfully."
