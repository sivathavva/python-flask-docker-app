name: Manage Docker Tags

on:
  workflow_dispatch: # Manual trigger

jobs:
  manage-docker-tags:
    runs-on: ubuntu-latest

    steps:
     - name: Log in to Docker Hub
       uses: docker/login-action@v2
        with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }

      # Step 2: Fetch Docker Image Tags Without jq
      - name: Fetch Docker Image Tags
        id: fetch_tags
        run: |
          IMAGE=" ${{ secrets.DOCKER_REPO }}
          TAGS_URL="https://hub.docker.com/v2/repositories/${IMAGE}/tags/"
          echo "Fetching tags for $IMAGE..."

          # Initialize variables
          TAGS=()
          NEXT_PAGE=$TAGS_URL

          while [ "$NEXT_PAGE" != "null" ]; do
            RESPONSE=$(curl -s $NEXT_PAGE)
            TAGS+=( $(echo "$RESPONSE" | grep -o '"name":"[^"]*' | sed 's/"name":"//') )
            NEXT_PAGE=$(echo "$RESPONSE" | grep -o '"next":"[^"]*' | sed 's/"next":"//' | sed 's/\\"//g')
            NEXT_PAGE=${NEXT_PAGE:-null} # Handle null next page
          done

          echo "Found ${#TAGS[@]} tags"
          echo "tags=${TAGS[*]}" >> $GITHUB_ENV
          echo "tag_count=${#TAGS[@]}" >> $GITHUB_ENV

      # Step 3: Delete Old Tags if Count Exceeds 2
      - name: Delete Old Tags
        if: env.tag_count > 10
        run: |
          IMAGE=" ${{ secrets.DOCKER_REPO }}
          TAGS=(${{ env.tags }})      # Read tags from the environment
          KEEP=10                   # Number of tags to keep (most recent)

          echo "Deleting older tags..."

          # Loop through all tags except the latest 'KEEP'
          for ((i=0; i<${#TAGS[@]} - KEEP; i++)); do
            TAG=${TAGS[$i]}
            echo "Deleting tag: $TAG"
            curl -X DELETE -u "${{ secrets.DOCKERHUB_USERNAME }}:${{ secrets.DOCKERHUB_PASSWORD }}" \
            "https://hub.docker.com/v2/repositories/${IMAGE}/tags/${TAG}/"
          done

          echo "Old tags deleted successfully."




