name: Manage Docker Tags

on:
  workflow_dispatch: # Manual trigger

jobs:
  manage-docker-tags:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 2: Fetch Docker Image Tags Without jq
      - name: Fetch Docker Image Tags
        id: fetch_tags
        run: |
          IMAGE="${{ secrets.DOCKER_REPO }}"  # Ensure no spaces around the variable reference
          TAGS_URL="https://hub.docker.com/v2/repositories/${IMAGE}/tags/"
          echo "Fetching tags for $IMAGE..."

          # Initialize variables
          TAGS=()
          NEXT_PAGE=$TAGS_URL
          
          while [ "$NEXT_PAGE" != "null" ]; do
            RESPONSE=$(curl -s $NEXT_PAGE)
            TAGS+=( $(echo "$RESPONSE" | grep -o '"name":"[^"]*' | sed 's/"name":"//') )
            NEXT_PAGE=$(echo "$RESPONSE" | grep -o '"next":"[^"]*' | sed 's/"next":"//' | sed 's/\\"//g')
            NEXT_PAGE=${NEXT_PAGE:-null}  # Handle null next page
          done

          echo "Found ${#TAGS[@]} tags"
          echo "tags=${TAGS[*]}" >> $GITHUB_ENV
          echo "tag_count=${#TAGS[@]}" >> $GITHUB_ENV

      # Step 3: Delete Timestamp-based Old Tags if Count Exceeds 10
      - name: Delete Timestamp-based Old Tags
        if: env.tag_count > 10
        run: |
          IMAGE="${{ secrets.DOCKER_REPO }}"  # Ensure no spaces around the variable reference
          TAGS=(${{ env.tags }})      # Read tags from the environment
          KEEP=10                     # Number of tags to keep (most recent)

          echo "Deleting older timestamp-based tags..."

          # Loop through all tags and delete timestamp-based tags if count exceeds 10
          TIMESTAMP_TAGS=()
          for TAG in "${TAGS[@]}"; do
            # Match timestamp-based tags using regex (e.g., "yyyyMMdd", "yyyy-MM-dd")
            if [[ "$TAG" =~ ^[0-9]{8}$ || "$TAG" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
              TIMESTAMP_TAGS+=("$TAG")
            fi
          done

          # Delete timestamp-based tags if count exceeds 10
          if [ ${#TIMESTAMP_TAGS[@]} -gt $KEEP ]; then
            # Sort tags by descending order (latest first)
            for ((i=0; i<${#TIMESTAMP_TAGS[@]} - KEEP; i++)); do
              TAG=${TIMESTAMP_TAGS[$i]}
              echo "Deleting timestamp tag: $TAG"
              curl -X DELETE -u "${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }}" \
              "https://hub.docker.com/v2/repositories/${IMAGE}/tags/${TAG}/"
            done
          else
            echo "No timestamp tags to delete. Keeping the most recent $KEEP tags."
          fi

          echo "Timestamp-based old tags deleted successfully."
