name: Manage Docker Hub Tags

on:
  workflow_dispatch: # Allows manual trigger of the workflow

jobs:
  manage-tags:
    runs-on: ubuntu-latest

    steps:
    - name: Set up jq
      run: sudo apt-get install -y jq

    - name: Authenticate with Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    - name: Fetch and Manage Docker Tags
      env:
        DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        # Initialize pagination URL
        NEXT_URL="https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/"
        ALL_TAGS=()

        # Fetch all tags with pagination
        while [ "$NEXT_URL" != "null" ]; do
          RESPONSE=$(curl -u "$DOCKER_USERNAME:$DOCKER_PASSWORD" -s "$NEXT_URL")
          TAGS=$(echo "$RESPONSE" | jq -r '.results[].name')
          ALL_TAGS+=($TAGS)
          NEXT_URL=$(echo "$RESPONSE" | jq -r '.next')
        done

        # Calculate total tags and sort them
        TOTAL_TAGS=${#ALL_TAGS[@]}
        if [ $TOTAL_TAGS -gt 10 ]; then
          echo "Total tags: $TOTAL_TAGS. Keeping the latest 10 and deleting the rest."
          DELETE_COUNT=$((TOTAL_TAGS - 10))

          # Sort the tags (modify as needed for your tag naming convention)
          SORTED_TAGS=($(printf '%s\n' "${ALL_TAGS[@]}" | sort))

          # Delete the oldest tags
          for ((i = 0; i < DELETE_COUNT; i++)); do
            OLD_TAG=${SORTED_TAGS[i]}
            echo "Deleting tag: $OLD_TAG"
            curl -u "$DOCKER_USERNAME:$DOCKER_PASSWORD" -X DELETE "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/$OLD_TAG/"
          done
        else
          echo "Total tags ($TOTAL_TAGS) are within the limit. No deletion required."
        fi
